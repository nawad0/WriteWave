services:
  postgres:
    image: postgres
    networks:
      - minionetwork
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
  minio:
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - minionetwork
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    command: server /data --console-address ":9001"
  write-wave-api:
    image: nawado/write-wave-api:latest
    build:
      context: .
      dockerfile: src/WriteWave.Api/Dockerfile
    networks:
      - minionetwork
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5177
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=writeDb
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=Http://+:5177
      - Minio__Client=minio:9000
      - Minio__AccessKey=admin
      - Minio__SecretKey=password
    ports:
      - 5177:5177
    depends_on:
      - postgres
      - minio
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
  frontend:
    build:
      context: .
      dockerfile: web/Dockerfile
      args:
#        VITE_API_URL: "http://83.229.83.240:5177"
        VITE_API_URL: "http://localhost:5177"
        VITE_WEB_URL: "http://localhost:3000"
        VITE_MINIO_URL: "http://localhost:9000"
    ports:
      - "3000:3000"
    networks:
      - minionetwork
networks:
  minionetwork:
    driver: bridge
volumes:
  pgdata:
  minio_data:
    driver: local